{
	"info": {
		"_postman_id": "7ab17b47-fd61-46cb-a629-30fcf7cf839f",
		"name": "namex-solr-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6835935",
		"_collection_link": "https://warped-escape-616276.postman.co/workspace/bc-registries~8ef8e652-492a-4d19-b978-d4f0da255b2c/collection/6835935-7ab17b47-fd61-46cb-a629-30fcf7cf839f?action=share&source=collection_link&creator=6835935"
	},
	"item": [
		{
			"name": "ops",
			"item": [
				{
					"name": "readyz",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{internal_url}}/ops/readyz",
							"host": [
								"{{internal_url}}"
							],
							"path": [
								"ops",
								"readyz"
							]
						},
						"description": "Get drafts example."
					},
					"response": []
				},
				{
					"name": "healthz",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{internal_url}}/ops/healthz",
							"host": [
								"{{internal_url}}"
							],
							"path": [
								"ops",
								"healthz"
							]
						},
						"description": "Get drafts example."
					},
					"response": []
				}
			]
		},
		{
			"name": "internal",
			"item": [
				{
					"name": "Authenticate",
					"item": [
						{
							"name": "authenticate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"token\", jsonData.access_token);",
											"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
											"",
											"pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));",
											"pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "grant_type=client_credentials"
								},
								"url": {
									"raw": "{{kc_url}}/auth/realms/{{realm}}/protocol/openid-connect/token",
									"host": [
										"{{kc_url}}"
									],
									"path": [
										"auth",
										"realms",
										"{{realm}}",
										"protocol",
										"openid-connect",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "backup",
					"item": [
						{
							"name": "backup",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200/OK\", function () {\r",
											"    pm.response.to.have.status(200);    \r",
											"});\r",
											"\r",
											"pm.test('should return JSON', function () {\r",
											"    pm.response.to.have.header('Content-Type', 'application/json');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Account-Id",
										"value": "{{account_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"command\": \"backup\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{internal_url}}/{{version}}/internal/solr/backup",
									"host": [
										"{{internal_url}}"
									],
									"path": [
										"{{version}}",
										"internal",
										"solr",
										"backup"
									]
								}
							},
							"response": []
						},
						{
							"name": "restore",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200/OK\", function () {\r",
											"    pm.response.to.have.status(200);    \r",
											"});\r",
											"\r",
											"pm.test('should return JSON', function () {\r",
											"    pm.response.to.have.header('Content-Type', 'application/json');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Account-Id",
										"value": "{{account_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"command\": \"restore\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{internal_url}}/{{version}}/internal/solr/backup",
									"host": [
										"{{internal_url}}"
									],
									"path": [
										"{{version}}",
										"internal",
										"solr",
										"backup"
									]
								}
							},
							"response": []
						},
						{
							"name": "restore status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200/OK\", function () {\r",
											"    pm.response.to.have.status(200);    \r",
											"});\r",
											"\r",
											"pm.test('should return JSON', function () {\r",
											"    pm.response.to.have.header('Content-Type', 'application/json');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Account-Id",
										"value": "{{account_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"command\": \"restorestatus\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{internal_url}}/{{version}}/internal/solr/backup",
									"host": [
										"{{internal_url}}"
									],
									"path": [
										"{{version}}",
										"internal",
										"solr",
										"backup"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "import",
					"item": [
						{
							"name": "base",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 201/CREATED\", function () {\r",
											"    pm.response.to.have.status(201);    \r",
											"});\r",
											"\r",
											"pm.test('should return JSON', function () {\r",
											"    pm.response.to.have.header('Content-Type', 'application/json');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Account-Id",
										"value": "{{account_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"possibleConflicts\":[\r\n      {\r\n        \"id\":\"12345\",\r\n        \"jurisdiction\": \"BC\",\r\n        \"state\": \"APPROVED\",\r\n        \"nr_num\": \"NR1234567\",\r\n        \"nr_start_date\": \"2025-03-17\",\r\n        \"names\": [\r\n            {\r\n                \"name\": \"Test Approved Name Inc.\",\r\n                \"name_state\": \"A\",\r\n                \"submit_count\": 1\r\n            }\r\n        ]\r\n      },\r\n      {\r\n        \"id\":\"12346\",\r\n        \"jurisdiction\": \"BC\",\r\n        \"state\": \"ACTIVE\",\r\n        \"corp_num\": \"BC1234567\",\r\n        \"corp_start_date\": \"2022-03-11\",\r\n        \"nr_num\": \"NR1234567\",\r\n        \"nr_start_date\": \"2022-02-23\",\r\n        \"names\": [\r\n            {\r\n                \"name\": \"Test Consumed Name Inc.\",\r\n                \"name_state\": \"C\",\r\n                \"submit_count\": 2\r\n            },\r\n            {\r\n                \"name\": \"Test Rejected Name Inc.\",\r\n                \"name_state\": \"R\",\r\n                \"submit_count\": 2\r\n            }\r\n        ]\r\n      },\r\n      {\r\n        \"id\":\"12347\",\r\n        \"jurisdiction\": \"BC\",\r\n        \"state\": \"EXPIRED\",\r\n        \"nr_num\": \"NR1234568\",\r\n        \"nr_start_date\": \"2024-02-04\",\r\n        \"names\": [\r\n            {\r\n                \"name\": \"Test EXPIRED Name Inc.\",\r\n                \"name_state\": \"A\",\r\n                \"submit_count\": 1\r\n            }\r\n        ]\r\n      }\r\n   ],\r\n   \"timeout\":\"45\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{internal_url}}/internal/solr/import",
									"host": [
										"{{internal_url}}"
									],
									"path": [
										"internal",
										"solr",
										"import"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "search",
			"item": [
				{
					"name": "possible-conflicts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Account-Id",
								"value": "{{account_id}}",
								"type": "text"
							},
							{
								"key": "x-apikey",
								"value": "{{api_key}}",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": {\n        \"value\": \"test\"\n    },\n    \"rows\": 100,\n    \"start\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{internal_url}}/api/v1/search/possible-conflicts",
							"host": [
								"{{internal_url}}"
							],
							"path": [
								"api",
								"v1",
								"search",
								"possible-conflicts"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}